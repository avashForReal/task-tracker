{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onShow","onClick","style","backgroundColor","className","defaultProps","Header","title","show","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setShow","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8c1bd20.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color,text,onShow}) => {\n    return (\n        <button onClick={onShow} style={{backgroundColor:color}} className=\"btn\">{text}</button>\n    )\n}\n\nButton.defaultProps = {\n    color : 'steelblue',\n}\n\nButton.propTypes = {\n    color : PropTypes.string,\n    text : PropTypes.string,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onShow, show }) => {\n    return ( \n        <header>\n            <h1>\n                {title}\n            </h1>\n            <Button color={show?'red':'green'} text={show ? 'Close' : 'Add Task'}  onShow={onShow}/>\n        </header>\n    )\n}\n// default props if the passed\nHeader.defaultProps = {\n    title:'Task Tracker',\n}\n\n//header prop types, for the robustness of the app\nHeader.propTypes = {\n    title : PropTypes.string.isRequired,\n}\n\n//no hyphen in css, camelCase is used\n// const headingStyle = {\n//     color:'red',\n//     backgroundColor: 'black',\n// }\n\nexport default Header","import {FaTimes} from 'react-icons/fa'\nimport React from 'react'\n\nconst Task = ({task, onDelete , onToggle}) => {\n    return (\n        // conditional css lul\n        <div className={`task ${task.reminder ? 'reminder':''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text} <FaTimes style={{color:'red', cursor:'pointer'}} onClick={() => onDelete(task.id)} /> </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\n\nconst Tasks = ({tasks,onDelete,onToggle}) => {\n    return (\n        \n        <>\n        {tasks.map((task)=>(\n            <Task key={task.id} task={task} onToggle={onToggle} onDelete={onDelete}/>\n        ))}  \n        </>\n    )\n}\n\nexport default Tasks\n","import React from 'react'\nimport {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n\n    const [text, setText] = useState('');\n    const [day, setDay] = useState('');\n    const [reminder, setReminder] = useState(false);\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if(!text) {\n            alert('Please add a tak')\n            return;\n        }\n\n        onAdd({text, day, reminder});\n\n        setText('');\n        setDay('');\n        setReminder(false);\n    }\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type=\"text\" placeholder=\"add task\"\n                        value={text} onChange={(e) => setText(e.target.value)}\n                />\n            </div>\n\n            <div className='form-control'>\n                <label>Day and Time</label>\n                <input type=\"text\" placeholder=\"add day and time\"\n                        value={day} onChange={(e) => setDay(e.target.value)}\n                />\n            </div>\n\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type=\"checkbox\"\n                    checked={reminder} value={reminder} onClick={(e) => setReminder(e.currentTarget.checked)}\n                />\n            </div>\n\n            <input className='btn btn-block' type=\"submit\" value=\"Save Task\" />\n        </form>\n    )\n}\n\nexport default AddTask\n","import { useState } from 'react'\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\n\nconst App = () => {\n  const [show, setShow] = useState(false);\n\n  const [tasks, setTasks] = useState(\n    [\n      {\n        id: 1,\n        text: 'do shit',\n        day: 'someday',\n        reminder: true\n      },\n      {\n        id: 2,\n        text: 'doing shit',\n        day: 'noday',\n        reminder: true\n      },\n      {\n        id: 3,\n        text: 'done shit',\n        day: 'lolday',\n        reminder: false\n      }\n  ]);\n\n\n  //add tasks\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {id, ...task};\n    setTasks([...tasks, newTask])\n  }\n\n  //delete tasks\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  }\n\n  const toggleRemainder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header show={show} onShow={() => setShow(!show)}/>\n         \n      { show && <AddTask onAdd={addTask}/> }\n      {/* conditional rendering */}\n      { tasks.length > 0 ? <Tasks tasks={tasks} onToggle={toggleRemainder}  onDelete={deleteTask} /> : 'No tasks to show!'}\n\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n\n"],"sourceRoot":""}